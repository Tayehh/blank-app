import streamlit as st
from PIL import Image
import pytesseract
import numpy as np
import cv2
import re

st.set_page_config(page_title="ุชุญููู BTcat", layout="centered")
st.title("๐ท ุชุญููู ุงูุงุชุฌุงู ูู ููุทุฉ ุงูุดุงุดุฉ (ูุน ูุต ุงูุณุนุฑ ูู ุงูุทูุงุฑุฉ)")

if "prices" not in st.session_state:
    st.session_state.prices = []

uploaded_file = st.file_uploader("๐ธ ุงุฑูุน ุตูุฑุฉ ูู ุงููุนุจุฉ", type=["png", "jpg", "jpeg"])

if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption="๐ท ุงูุตูุฑุฉ ุงูุฃุตููุฉ", use_column_width=True)

    # ุชุญููู ุงูุตูุฑุฉ ุฅูู numpy array ููุนุงูุฌุชูุง
    img = np.array(image)
    height, width, _ = img.shape

    # ๐ ูุต ููุทูุฉ ุงูุณุนุฑ ุฏุงุฎู ุงูุทูุงุฑุฉ (ุชูุฏูุฑููุง ููุชุตู ุงูุตูุฑุฉ)
    crop_top = int(height * 0.42)
    crop_bottom = int(height * 0.52)
    crop_left = int(width * 0.25)
    crop_right = int(width * 0.75)

    cropped = img[crop_top:crop_bottom, crop_left:crop_right]
    st.image(cropped, caption="โ๏ธ ุงูููุทูุฉ ุงูููุตูุตุฉ (ุงูุณุนุฑ ููุท)")

    # ุชุญููู ูุตูุฑุฉ ุฑูุงุฏูุฉ ููุนุงูุฌุฉ
    gray = cv2.cvtColor(cropped, cv2.COLOR_BGR2GRAY)
    _, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

    # OCR
    extracted_text = pytesseract.image_to_string(thresh)
    st.text_area("๐ ุงููุต ุงููุณุชุฎุฑุฌ:", extracted_text, height=100)

    match = re.search(r"\d{4,6}\.\d{2}", extracted_text)
    if match:
        price = float(match.group())
        st.success(f"โ ุงูุณุนุฑ ุงููุณุชุฎุฑุฌ: {price}")
        st.session_state.prices.append(price)

        if len(st.session_state.prices) > 3:
            st.session_state.prices.pop(0)

        st.write("๐งพ ุขุฎุฑ 3 ุฃุณุนุงุฑ:", st.session_state.prices)

        if len(st.session_state.prices) == 3:
            p1, p2, p3 = st.session_state.prices
            if p3 > p2 > p1:
                st.success("๐บ ุงูุงุชุฌุงู: ุตุนูุฏ")
            elif p3 < p2 < p1:
                st.error("๐ป ุงูุงุชุฌุงู: ูุจูุท")
            elif (p3 > p2 < p1) or (p3 < p2 > p1):
                st.warning("๐ ุงูุงุชุฌุงู: ูุชุฐุจุฐุจ")
            else:
                st.info("โธ๏ธ ุงูุงุชุฌุงู: ุซุงุจุช")
    else:
        st.warning("โ ุงูุณุนุฑ ุบูุฑ ูุงุถุญุ ุฌุฑูุจ ุตูุฑุฉ ุฃูุถุญ ุฃู ุชูุจูุฑ ุงูุทูุงุฑุฉ")

# ุฒุฑ Reset
if st.button("๐ Reset"):
    st.session_state.prices = []
    st.success("โ ุชู ุฅุนุงุฏุฉ ุงูุชููุฆุฉ.")
